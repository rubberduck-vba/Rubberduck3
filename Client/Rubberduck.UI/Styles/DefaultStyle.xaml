<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Rubberduck.UI.Styles"
                    xmlns:converters="clr-namespace:Rubberduck.UI.Converters">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Themes/DarkTheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <converters:BoolToVisibleVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
    <converters:SelectedItemToBooleanConverter x:Key="HasSelectedItems"/>
    <converters:WindowStateToVisibilityConverter x:Key="WindowStateToRestoreVisibility" VisibleState="Maximized" HiddenState="Normal" />
    <converters:WindowStateToVisibilityConverter x:Key="WindowStateToMaximizeVisibility" VisibleState="Normal" HiddenState="Maximized" />

    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Grid Background="{DynamicResource ThemeBackgroundLightColorBrush}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border Grid.RowSpan="2" Background="{DynamicResource ThemeBackgroundDarkColorBrush}" />

            <!-- Title bar -->
            
            <DockPanel Margin="2"
                       HorizontalAlignment="Left" 
                       VerticalAlignment="Top">
                
                <Button DockPanel.Dock="Left"
                        Command="{x:Static SystemCommands.ShowSystemMenuCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image x:Name="AppIcon" 
                                   Width="16" 
                                   Height="16" 
                                   Margin="2,2,2,0" 
                                   VerticalAlignment="Top" 
                                   HorizontalAlignment="Left"
                                   Source="{Binding Icon, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" />
                        </ControlTemplate>
                    </Button.Template>
                </Button>
                <TextBlock x:Name="AppTitle" 
                           DockPanel.Dock="Left"
                           Margin="2"
                           Text="{Binding Title, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" 
                           FontWeight="SemiBold" 
                           Foreground="{DynamicResource ThemeTextColorBrush}" />
            </DockPanel>
            
            <TextBlock x:Name="ActiveDocumentTitle" Margin="0,2"
                        VerticalAlignment="Top" 
                        HorizontalAlignment="Center"
                        Text="[Project1.rdproj]" /> <!-- TODO binding here -->

            <!-- TODO templates! -->
            <DockPanel VerticalAlignment="Top" 
                       HorizontalAlignment="Right">

                <Button x:Name="ControlBoxCloseButton" Margin="0.5,-2,0,0"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource ControlBoxButtonStyle}"
                        Command="{x:Static SystemCommands.CloseWindowCommand}" 
                        ToolTip="Close">
                    <Canvas Style="{DynamicResource ControlBoxButtonCanvasStyle}">
                        <Image Source="{DynamicResource WindowCloseIcon}"
                               Style="{DynamicResource ControlBoxButtonImageStyle}" />
                        <Rectangle Fill="{Binding Background, ElementName=ControlBoxCloseButton, Mode=OneWay}"
                                   Height="20" 
                                   Width="20" >
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{DynamicResource WindowCloseIcon}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Canvas>
                </Button>

                <Button x:Name="ControlBoxMaximizeButton" Margin="0.5,0"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource ControlBoxButtonStyle}" 
                        Command="{x:Static SystemCommands.MaximizeWindowCommand}" 
                        Visibility="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Converter={StaticResource WindowStateToMaximizeVisibility}}"
                        ToolTip="Maximize">
                    <Canvas Style="{DynamicResource ControlBoxButtonCanvasStyle}">
                        <Image Source="{DynamicResource WindowMaximizeIcon}"
                               Style="{DynamicResource ControlBoxButtonImageStyle}"/>
                        <Rectangle Fill="{Binding Background, ElementName=ControlBoxMaximizeButton}"
                                   Style="{DynamicResource ControlBoxButtonMaskRectangleStyle}">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{DynamicResource WindowMaximizeIcon}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Canvas>
                </Button>

                <Button x:Name="ControlBoxRestoreButton" Margin="0.5,0"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource ControlBoxButtonStyle}"
                        Command="{x:Static SystemCommands.RestoreWindowCommand}"
                        Visibility="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}, Converter={StaticResource WindowStateToRestoreVisibility}}"
                        ToolTip="Restore">
                    <Canvas Style="{DynamicResource ControlBoxButtonCanvasStyle}">
                        <Image Source="{DynamicResource WindowRestoreIcon}"
                               Style="{DynamicResource ControlBoxButtonImageStyle}"/>
                        <Rectangle Fill="{Binding Background, ElementName=ControlBoxRestoreButton}"
                                   Style="{DynamicResource ControlBoxButtonMaskRectangleStyle}">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{DynamicResource WindowRestoreIcon}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Canvas>
                </Button>

                <Button x:Name="ControlBoxMinimizeButton" Margin="0.5,0"
                        DockPanel.Dock="Right"
                        Style="{DynamicResource ControlBoxButtonStyle}"
                        Command="{x:Static SystemCommands.MinimizeWindowCommand}"
                        ToolTip="Minimize">
                    <Canvas Style="{DynamicResource ControlBoxButtonCanvasStyle}">
                        <Image Source="{DynamicResource WindowMinimizeIcon}"
                               Style="{DynamicResource ControlBoxButtonImageStyle}"/>
                        <Rectangle Fill="{Binding Background, ElementName=ControlBoxMinimizeButton}"
                                   Style="{DynamicResource ControlBoxButtonMaskRectangleStyle}">
                            <Rectangle.OpacityMask>
                                <ImageBrush ImageSource="{DynamicResource WindowMinimizeIcon}" />
                            </Rectangle.OpacityMask>
                        </Rectangle>
                    </Canvas>
                </Button>

            </DockPanel>

            <Border Grid.Row="1" Background="{DynamicResource ThemeBackgroundLightColorBrush}" Margin="4,0,4,8" CornerRadius="8">
                <ContentPresenter x:Name="ClientArea" Content="{TemplateBinding Content}" />
            </Border>
            
        </Grid>
    </ControlTemplate>

        <!-- note: key seems to be required, WindowChrome doesn't seem to work correctly without :( -->
    <Style x:Key="ThemedWindowStyle" TargetType="{x:Type Window}">
        <Style.Setters>
            <Setter Property="Icon" Value="{StaticResource DuckyIcon}" />
            <Setter Property="SizeToContent" Value="WidthAndHeight" />
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="MinHeight" Value="300" />
            <Setter Property="MinWidth" Value="480" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBackgroundDarkColorBrush}" />
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundDarkColorBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBackgroundDarkColorBrush}" />
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome UseAeroCaptionButtons="False" 
                                  CaptionHeight="20"
                                  GlassFrameThickness="0" />
                </Setter.Value>
            </Setter>
            <Setter Property="Template" Value="{DynamicResource WindowTemplate}" />
        </Style.Setters>
    </Style>

    <Style x:Key="ControlBoxButtonMaskRectangleStyle" TargetType="{x:Type Rectangle}">
        <Style.Setters>
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Fill" Value="{DynamicResource ThemeBlackLightColorBrush}" />
        </Style.Setters>
    </Style>
    <Style x:Key="ControlBoxButtonImageStyle" TargetType="{x:Type Image}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" />
        <Setter Property="Stretch" Value="Fill" />
    </Style>
    <Style x:Key="ControlBoxButtonCanvasStyle" TargetType="{x:Type Canvas}">
        <Setter Property="Height" Value="20" />
        <Setter Property="Width" Value="20" /> 
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="ControlBoxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="{DynamicResource ThemeWhiteMediumColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextBackgroundColorBrush}"/>
        <Setter Property="Template" Value="{DynamicResource ControlBoxButtonTemplate}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="Transparent" />
                </DataTrigger.Setters>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <DataTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ThemeBlackLightColorBrush}" />
                </DataTrigger.Setters>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ControlBoxButtonTemplate" TargetType="{x:Type ButtonBase}">
        <ContentPresenter x:Name="contentPresenter" 
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          Margin="{TemplateBinding Padding}" 
                          RecognizesAccessKey="True" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    </ControlTemplate>

    <Style x:Key="ActionButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4" />
            </Style>
        </Style.Resources>
        <Style.Setters>
            <Setter Property="MinWidth" Value="92" />
            <Setter Property="Height" Value="24" />
        </Style.Setters>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsDefault, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                <Setter Property="Background" Value="{DynamicResource ThemeAccent1DarkColorBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ThemeAccent1TextColorBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>