<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:dragablz="http://dragablz.net/winfx/xaml/dragablz" 
                    xmlns:dockablz="http://dragablz.net/winfx/xaml/dockablz"
                    xmlns:document="clr-namespace:Rubberduck.UI.Shell.Document"
                    xmlns:local="clr-namespace:Rubberduck.UI.Shell">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/DefaultStyle.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Rubberduck.UI;component/Styles/Templates.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/Dragablz;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ToolPanelExpanderStyle" TargetType="Expander">
        <Setter Property="BorderThickness" Value="0" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ExpandDirection, Source={RelativeSource Mode=Self}}" Value="Right">
                <Setter Property="Width" Value="{Binding PanelWidth}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ExpandDirection, Source={RelativeSource Mode=Self}}" Value="Left">
                <Setter Property="Width" Value="{Binding PanelWidth}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding ExpandDirection, Source={RelativeSource Mode=Self}}" Value="Up">
                <Setter Property="Height" Value="{Binding PanelHeight}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TabHeaderItemStyle" TargetType="dragablz:DragablzItem" BasedOn="{StaticResource TrapezoidDragableTabItemStyle}" >
        <Setter Property="Content" Value="{Binding Title}" />
    </Style>

    <DataTemplate x:Key="TabHeaderItemTemplate" DataType="windows:ITabViewModel">
        <Grid>
            <Label Style="{DynamicResource FormLabelStyleSmall}"
                   Margin="2" 
                   BorderThickness="0"
                   Background="{DynamicResource ThemeBackgroundColorBrush}">
                <TextBlock Text="" />
            </Label>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="ToolTabItemTemplate" DataType="windows:ITabViewModel">
        <ContentControl Content="{Binding ContentControl}" />
    </DataTemplate>

    <Style x:Key="BaseLayoutStyle" TargetType="dockablz:Layout">
        <Style.Setters>
            <Setter Property="IsFloatDropZoneEnabled" Value="False" />
        </Style.Setters>
    </Style>

    <DataTemplate x:Key="TextDocumentTabItemTemplate" DataType="document:ITabViewModel">
        <document:TextEditorControl />
    </DataTemplate>

    <DataTemplate x:Key="MarkdownDocumentTabItemTemplate" DataType="document:ITabViewModel">
        <document:MarkdownEditorControl />
    </DataTemplate>

    <DataTemplate x:Key="JsonDocumentTabItemTemplate" DataType="document:ITabViewModel">
        <document:TextEditorControl />
    </DataTemplate>

    <DataTemplate x:Key="SourceFileDocumentTabItemTemplate" DataType="document:ITabViewModel">
        <document:SourceCodeEditorControl />
    </DataTemplate>

    <document:DocumentTabTemplateSelector x:Key="DocumentTabTemplateSelector"
                                          TextDocumentTemplate="{StaticResource TextDocumentTabItemTemplate}"
                                          MarkdownDocumentTemplate="{StaticResource MarkdownDocumentTabItemTemplate}"
                                          ProjectFileTemplate="{StaticResource JsonDocumentTabItemTemplate}"
                                          SourceFileTemplate="{StaticResource SourceFileDocumentTabItemTemplate}"/>

    <DataTemplate x:Key="DocumentTabItemTemplate" DataType="windows:ITabViewModel">
        <ContentControl ContentTemplateSelector="{StaticResource DocumentTabTemplateSelector}" Content="{Binding ContentControl}" />
    </DataTemplate>

    <Style x:Key="TrapezoidTabItemStyle" TargetType="{x:Type dragablz:DragablzItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextColorBrush}" />
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
        <Setter Property="Margin" Value="0 0 0 0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid Name="templateRoot" SnapsToDevicePixels="true" Margin="0 1 0 -1">
                        <dragablz:Trapezoid Name="Trapezoid" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" PenThickness="2" Margin="0 0 0 0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" />
                                <Thumb Name="PART_Thumb" Grid.Column="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource InvisibleThumbStyle}" />
                                <Button Grid.Column="1" Style="{StaticResource CloseItemCommandButtonStyle}" Command="{x:Static dragablz:TabablzControl.CloseItemCommand}" CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                                    <Button.Visibility>
                                        <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                            <Binding Path="ShowDefaultCloseButton" RelativeSource="{RelativeSource FindAncestor , AncestorType={x:Type dragablz:TabablzControl}}" />
                                            <Binding Path="FixedHeaderCount" RelativeSource="{RelativeSource FindAncestor , AncestorType={x:Type dragablz:TabablzControl}}" />
                                            <Binding Path="LogicalIndex" RelativeSource="{RelativeSource TemplatedParent}" />
                                        </MultiBinding>
                                    </Button.Visibility>
                                </Button>
                            </Grid>
                        </dragablz:Trapezoid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" Property="Content" />
                        </Trigger>
                        <Trigger Property="dragablz:DragablzItem.IsSelected" Value="True">
                            <Setter Value="{StaticResource TabItem.Selected.Background}" TargetName="Trapezoid" Property="Background" />
                            <Setter Value="{StaticResource TabItem.Selected.Background}" TargetName="Trapezoid" Property="dragablz:Trapezoid.LongBasePenBrush" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolTabItemStyle" TargetType="{x:Type dragablz:DragablzItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource ThemeTextColorBrush}" />
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid Name="templateRoot" SnapsToDevicePixels="true">
                        <Border Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" Margin="0">
                            <Border Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0" />
                        </Border>
                        <ContentPresenter Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" />
                        <Thumb Name="PART_Thumb" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource InvisibleThumbStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" Property="Content" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,0,0,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StandardDragablzTabItemStyle" TargetType="{x:Type dragablz:DragablzItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}" />
        <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dragablz:DragablzItem}">
                    <Grid Name="templateRoot" SnapsToDevicePixels="true">
                        <Border Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0 0 0 1">
                            <Border Name="innerBorder" BorderBrush="{StaticResource TabItem.Selected.Border}" BorderThickness="1,1,1,0" Background="{StaticResource TabItem.Selected.Background}" Margin="-1" Opacity="0" />
                        </Border>
                        <ContentPresenter Name="contentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" />
                        <Thumb Name="PART_Thumb" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" Style="{StaticResource InvisibleThumbStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                            <Setter TargetName="contentPresenter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" Property="Content" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsEnabled , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.56" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}" Property="Background" />
                            <Setter TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}" Property="BorderBrush" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,-2,0,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,0,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,0,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="-2,0,-2,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,0,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,0,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="true" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,-2,-2,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="0,1,1,1" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="0,1,1,1" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected , RelativeSource={RelativeSource Self}}" Value="false" />
                                <Condition Binding="{Binding TabStripPlacement , RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Panel.ZIndex" Value="1" />
                            <Setter Property="Margin" Value="0,0,0,-2" />
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="1" />
                            <Setter TargetName="innerBorder" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DocumentTabControlStyle" TargetType="dragablz:TabablzControl">
        <Style.Setters>
            <Setter Property="Background" Value="{DynamicResource ThemeBackgroundColorBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource ThemeTextBackgroundColorBrush}" />
            <Setter Property="ItemTemplateSelector" Value="{DynamicResource DocumentTabTemplateSelector}" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource TrapezoidTabItemStyle}" />
            <Setter Property="ShowDefaultAddButton" Value="False" />
            <Setter Property="ShowDefaultCloseButton" Value="True" />
            <Setter Property="HeaderMemberPath" Value="Title" />
        </Style.Setters>
    </Style>

    <ControlTemplate x:Key="TrapezoidDragablzItem" TargetType="{x:Type dragablz:DragablzItem}">
        <Grid x:Name="templateRoot" SnapsToDevicePixels="true" Margin="0 1 0 -1">
            <dragablz:Trapezoid x:Name="Trapezoid" 
                                         BorderBrush="{TemplateBinding BorderBrush}" 
                                         Background="{TemplateBinding Background}"                                          
                                         PenThickness="2"
                                         Margin="0 0 0 0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Content="{TemplateBinding ContentControl.Content}" 
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" 
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" 
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" 
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" 
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                      Margin="{TemplateBinding Control.Padding}"
                                      x:Name="contentPresenter" />
                    <Thumb Grid.Column="0" HorizontalAlignment="Stretch" VerticalContentAlignment="Stretch" x:Name="PART_Thumb" Style="{StaticResource InvisibleThumbStyle}" />

                    <Button Grid.Column="2"
                                        Style="{StaticResource CloseItemCommandButtonStyle}"                                        
                                        Command="{x:Static dragablz:TabablzControl.CloseItemCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                        <Button.Visibility>
                            <MultiBinding Converter="{StaticResource ShowDefaultCloseButtonConverter}">
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" Path="ShowDefaultCloseButton" />
                                <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type dragablz:TabablzControl}}" Path="FixedHeaderCount" />
                                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="LogicalIndex" />
                            </MultiBinding>
                        </Button.Visibility>
                    </Button>
                </Grid>
            </dragablz:Trapezoid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dragablz:TabablzControl.IsWrappingTabItem" Value="True">
                <Setter TargetName="contentPresenter" Property="Content" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DataContext.Header}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}" TargetName="Trapezoid"/>
                <Setter Property="LongBasePenBrush" Value="{StaticResource TabItem.Selected.Background}" TargetName="Trapezoid"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ToolTabTemplate" TargetType="{x:Type dragablz:TabablzControl}">
        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local" Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="ColumnDefinition0" Width="Auto"/>
                <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <!-- template reverses grid rows to show tabs at the bottom -->
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Border x:Name="contentPanel" Grid.Row="0" Grid.Column="1"
                    CornerRadius="{TemplateBinding Border.CornerRadius}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}"
                    KeyboardNavigation.DirectionalNavigation="Contained" 
                    KeyboardNavigation.TabIndex="2" 
                    KeyboardNavigation.TabNavigation="Local" 
                    Margin="0">
                <Grid x:Name="PART_ItemsHolder" />
            </Border>

            <Grid x:Name="HeaderContainerGrid" Grid.Row="1" Grid.Column="1" 
                  Visibility="{TemplateBinding IsHeaderPanelVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ContentControl Grid.Row="0" x:Name="PrefixContentControl" 
                                Content="{TemplateBinding HeaderPrefixContent}"
                                ContentStringFormat="{TemplateBinding HeaderPrefixContentStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderPrefixContentStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderPrefixContentTemplateSelector}"/>
                
                <dragablz:DragablzItemsControl x:Name="PART_HeaderItemsControl"                                              
                                            Grid.Row="1" 
                                            ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items}"                                                                                                            
                                            ItemContainerStyle="{TemplateBinding ItemContainerStyle}"
                                            ItemsOrganiser="{TemplateBinding HeaderItemsOrganiser}"
                                            KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"
                                            ItemTemplate="{TemplateBinding HeaderItemTemplate}"
                                            Style="{StaticResource TabablzDragablzItemsControlStyle}">

                    <dragablz:DragablzItemsControl.MaxHeight>
                        <MultiBinding>
                            <MultiBinding.Converter>
                                <dragablz:TabablzHeaderSizeConverter Orientation="Vertical"/>
                            </MultiBinding.Converter>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualHeight" />
                            <Binding RelativeSource="{RelativeSource Self}" Path="ItemsPresenterHeight" />
                            <Binding ElementName="PrefixContentControl" Path="ActualHeight" />
                            <Binding ElementName="DefaultAddButton" Path="DesiredSize.Height" />
                            <Binding ElementName="SuffixContentControl" Path="DesiredSize.Height" />
                        </MultiBinding>
                    </dragablz:DragablzItemsControl.MaxHeight>

                </dragablz:DragablzItemsControl>

                <Button x:Name="DefaultAddButton" Grid.Row="2"
                        Style="{StaticResource AddItemCommandButtonStyle}"
                        Command="{x:Static dragablz:TabablzControl.AddItemCommand}"
                        Visibility="{TemplateBinding ShowDefaultAddButton, Converter={StaticResource BooleanToVisibilityConverter}}" />

                <ContentControl x:Name="SuffixContentControl" Grid.Row="3" 
                                Content="{TemplateBinding HeaderSuffixContent}"
                                ContentStringFormat="{TemplateBinding HeaderSuffixContentStringFormat}"
                                ContentTemplate="{TemplateBinding HeaderSuffixContentStringFormat}"
                                ContentTemplateSelector="{TemplateBinding HeaderSuffixContentTemplateSelector}"
                                VerticalAlignment="Top" />
            </Grid>
        </Grid>
    </ControlTemplate>

</ResourceDictionary>